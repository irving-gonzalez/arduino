#include <WiFi.h>
#include <R4HttpClient.h>  // Use R4HttpClient instead of WiFiS3Client

// LED Matrix
#include <ArduinoGraphics.h>
#include <Arduino_LED_Matrix.h>

ArduinoLEDMatrix matrix;  // Create LED matrix object

const int trigPin = 12;    // Trigger pin connected to Pin 12
const int echoPin = 11;    // Echo pin connected to Pin 11
const int ledPin = LED_BUILTIN; // Built-in LED pin

long duration;
int distance;

const char* server = "api.twilio.com";
const int httpsPort = 443;

R4HttpClient client;  // Use R4HttpClient for HTTP requests

// Twilio credentials for Basic Authentication
String credentials = "";

// Global variables for phone numbers and message body
String toNumber = "whatsapp:";
String fromNumber = "whatsapp:";
String messageBody = "Hello+from+Twilio";

// Twilio Account SID (global variable)
String accountSid = "";

// Internet connection details
const char* ssid = "your_wifi_ssid";
const char* password = "your_wifi_password";

byte frame[8][12] = {
  { 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
  { 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
  { 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
  { 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
  { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};

void setup() {
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(ledPin, OUTPUT);

  sendMessage();
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.0344 / 2;

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  if (distance < 40) {
    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(500);
  } else {
    digitalWrite(ledPin, LOW);
  }

  delay(200);
}

void sendMessage() {
  WiFi.begin(ssid, password);

  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi!");

  matrix.begin();
  matrix.renderBitmap(frame, 8, 12);

  Serial.println("Connecting to Twilio...");

  // Create R4HttpClient instance and connect to Twilio
  if (!client.begin(server, httpsPort)) {
    Serial.println("Connection failed!");
    return;
  }

  // Prepare the data URL-encoded as specified in the cURL command
  String url = "/2010-04-01/Accounts/" + accountSid + "/Messages.json";
  String data = "To=" + toNumber + "&From=" + fromNumber + "&Body=" + messageBody;

  // Set the basic authentication header with Account SID and Auth Token
  String authHeader = "Basic " + base64::encode(credentials);

  // Set the necessary headers
  client.addHeader("Authorization", authHeader);
  client.addHeader("Content-Type", "application/x-www-form-urlencoded");
  client.addHeader("Content-Length", String(data.length()));

  // Send the POST request
  int httpResponseCode = client.POST(url, data);
  
  if (httpResponseCode > 0) {
    Serial.print("HTTP Response Code: ");
    Serial.println(httpResponseCode);
    
    // Read the response (optional)
    String response = client.getString();
    Serial.println(response);
  } else {
    Serial.print("Error on sending POST: ");
    Serial.println(httpResponseCode);
  }
}
